import fetch from 'node-fetch';

const API_BASE = 'http://localhost:4002';

// Fonction utilitaire pour les tests
async function testEndpoint(method, endpoint, data = null, description = '') {
  try {
    console.log(`\nüß™ Test: ${description || `${method} ${endpoint}`}`);
    
    const options = {
      method,
      headers: {
        'Content-Type': 'application/json',
      }
    };
    
    if (data) {
      options.body = JSON.stringify(data);
    }
    
    const response = await fetch(`${API_BASE}${endpoint}`, options);
    const result = await response.json();
    
    console.log(`‚úÖ Status: ${response.status}`);
    console.log(`üìä R√©ponse:`, JSON.stringify(result, null, 2));
    
    return { success: true, data: result };
    
  } catch (error) {
    console.log(`‚ùå Erreur: ${error.message}`);
    return { success: false, error: error.message };
  }
}

// Tests des endpoints
async function runTests() {
  console.log('üöÄ D√©marrage des tests de l\'API TagZai...\n');
  
  // Test 1: Health check
  await testEndpoint('GET', '/health', null, 'V√©rification de l\'√©tat du service');
  
  // Test 2: Extraction de tags
  await testEndpoint('POST', '/extract', {
    text: "Le vent souffle sur la mer, les vagues dansent au rythme du temps",
    title: "Po√®me marin",
    top: 5
  }, 'Extraction de tags depuis un texte');
  
  // Test 3: Ingestion d'un po√®me
  await testEndpoint('POST', '/ingest', {
    poem_id: 'test_poem_001',
    text: "L'amour est une rose qui fleurit dans le jardin de l'√¢me",
    title: "Rose d'amour"
  }, 'Ingestion d\'un po√®me avec extraction automatique');
  
  // Test 4: Suggestions de tags
  await testEndpoint('POST', '/suggest', {
    seed: ['amour', 'rose'],
    limit: 3
  }, 'Suggestions de tags bas√©es sur des tags existants');
  
  // Test 5: Tags li√©s
  await testEndpoint('GET', '/related/amour?limit=3', null, 'Tags li√©s au tag "amour"');
  
  // Test 6: Tags tendance
  await testEndpoint('GET', '/trending?limit=5&days=1', null, 'Tags tendance du dernier jour');
  
  // Test 7: Statistiques g√©n√©rales
  await testEndpoint('GET', '/stats', null, 'Statistiques g√©n√©rales de l\'API');
  
  // Test 8: Statistiques d'un tag sp√©cifique
  await testEndpoint('GET', '/stats/amour', null, 'Statistiques du tag "amour"');
  
  console.log('\nüéØ Tests termin√©s!');
}

// Gestion des erreurs
process.on('unhandledRejection', (error) => {
  console.error('‚ùå Erreur non g√©r√©e:', error);
  process.exit(1);
});

// Ex√©cution des tests
runTests().catch(console.error);